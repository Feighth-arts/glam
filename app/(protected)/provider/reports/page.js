"use client";

import { useState } from "react";
import { Download, FileText, BarChart3, Users, Calendar, DollarSign } from "lucide-react";
import jsPDF from 'jspdf';
import autoTable from 'jspdf-autotable';

const ReportsPage = () => {
  const [selectedPeriod, setSelectedPeriod] = useState("monthly");

  const reportCategories = [
    {
      title: "Financial Reports",
      icon: DollarSign,
      color: "text-green-600",
      bg: "bg-green-50",
      reports: [
        { name: "Revenue Summary", description: "Monthly revenue breakdown and trends" },
        { name: "Payment History", description: "Complete payment transaction history" },
        { name: "Tax Report", description: "Tax-ready financial summary" }
      ]
    },
    {
      title: "Booking Reports",
      icon: Calendar,
      color: "text-blue-600",
      bg: "bg-blue-50",
      reports: [
        { name: "Booking Analytics", description: "Booking patterns and statistics" },
        { name: "Service Performance", description: "Most popular services analysis" },
        { name: "Cancellation Report", description: "Cancellation rates and reasons" }
      ]
    },
    {
      title: "Client Reports",
      icon: Users,
      color: "text-purple-600",
      bg: "bg-purple-50",
      reports: [
        { name: "Client Demographics", description: "Client age, location, and preferences" },
        { name: "Loyalty Analysis", description: "Repeat clients and retention rates" },
        { name: "Feedback Summary", description: "Client reviews and ratings analysis" }
      ]
    },
    {
      title: "Performance Reports",
      icon: BarChart3,
      color: "text-orange-600",
      bg: "bg-orange-50",
      reports: [
        { name: "Business Overview", description: "Complete business performance summary" },
        { name: "Growth Metrics", description: "Month-over-month growth analysis" },
        { name: "Competitive Analysis", description: "Market position and benchmarks" }
      ]
    }
  ];

  const downloadReport = (categoryTitle, reportName) => {
    const doc = new jsPDF();
    
    // Add title
    doc.setFontSize(20);
    doc.text(`${reportName}`, 20, 30);
    
    // Add subtitle
    doc.setFontSize(12);
    doc.text(`${categoryTitle} - ${selectedPeriod.charAt(0).toUpperCase() + selectedPeriod.slice(1)} Report`, 20, 45);
    doc.text(`Generated on: ${new Date().toLocaleDateString()}`, 20, 55);
    
    // Add sample data based on report type
    let tableData = [];
    let headers = [];
    
    if (categoryTitle === 'Financial Reports') {
      headers = ['Month', 'Revenue', 'Expenses', 'Profit'];
      tableData = [
        ['January', 'KES 15,200', 'KES 3,400', 'KES 11,800'],
        ['February', 'KES 18,500', 'KES 4,100', 'KES 14,400'],
        ['March', 'KES 22,100', 'KES 4,800', 'KES 17,300']
      ];
    } else if (categoryTitle === 'Booking Reports') {
      headers = ['Service', 'Bookings', 'Revenue', 'Avg Rating'];
      tableData = [
        ['Hair Styling', '45', 'KES 112,500', '4.8'],
        ['Makeup', '32', 'KES 96,000', '4.9'],
        ['Nail Art', '28', 'KES 50,400', '4.7']
      ];
    } else if (categoryTitle === 'Client Reports') {
      headers = ['Client Type', 'Count', 'Revenue', 'Retention'];
      tableData = [
        ['New Clients', '45', 'KES 67,500', '78%'],
        ['Returning Clients', '89', 'KES 178,000', '92%'],
        ['VIP Clients', '12', 'KES 54,000', '100%']
      ];
    } else {
      headers = ['Metric', 'Current', 'Previous', 'Growth'];
      tableData = [
        ['Total Revenue', 'KES 245,500', 'KES 198,200', '+23.9%'],
        ['Total Bookings', '156', '134', '+16.4%'],
        ['Avg Rating', '4.8', '4.6', '+4.3%']
      ];
    }
    
    // Add table
    autoTable(doc, {
      head: [headers],
      body: tableData,
      startY: 70,
      theme: 'grid',
      headStyles: { fillColor: [244, 63, 94] },
      styles: { fontSize: 10 }
    });
    
    // Add footer
    const pageHeight = doc.internal.pageSize.height;
    doc.setFontSize(8);
    doc.text('Generated by Glamease Provider Dashboard', 20, pageHeight - 20);
    
    // Save the PDF
    doc.save(`${reportName.replace(/\s+/g, '_')}_${selectedPeriod}.pdf`);
  };

  return (
    <div className="space-y-6">
      <div className="flex justify-between items-center">
        <h1 className="text-2xl font-bold text-gray-900">Reports</h1>
        <div className="flex items-center gap-4">
          <select 
            value={selectedPeriod}
            onChange={(e) => setSelectedPeriod(e.target.value)}
            className="px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-rose-primary"
          >
            <option value="weekly">Weekly</option>
            <option value="monthly">Monthly</option>
            <option value="quarterly">Quarterly</option>
            <option value="yearly">Yearly</option>
          </select>
        </div>
      </div>

      <div className="grid grid-cols-1 lg:grid-cols-2 gap-6">
        {reportCategories.map((category, categoryIndex) => {
          const Icon = category.icon;
          return (
            <div key={categoryIndex} className="bg-white rounded-lg shadow">
              <div className="p-6 border-b border-gray-200">
                <div className="flex items-center gap-3">
                  <div className={`${category.bg} p-2 rounded-lg`}>
                    <Icon className={`w-6 h-6 ${category.color}`} />
                  </div>
                  <h2 className="text-lg font-semibold text-gray-900">{category.title}</h2>
                </div>
              </div>
              <div className="p-6">
                <div className="space-y-4">
                  {category.reports.map((report, reportIndex) => (
                    <div key={reportIndex} className="flex items-center justify-between p-4 bg-gray-50 rounded-lg">
                      <div className="flex items-center gap-3">
                        <FileText className="w-5 h-5 text-gray-400" />
                        <div>
                          <h3 className="font-medium text-gray-900">{report.name}</h3>
                          <p className="text-sm text-gray-600">{report.description}</p>
                        </div>
                      </div>
                      <button
                        onClick={() => downloadReport(category.title, report.name)}
                        className="flex items-center gap-2 px-3 py-2 bg-rose-primary text-white rounded-lg hover:bg-rose-dark transition-colors text-sm"
                      >
                        <Download className="w-4 h-4" />
                        PDF
                      </button>
                    </div>
                  ))}
                </div>
              </div>
            </div>
          );
        })}
      </div>

      {/* Quick Stats */}
      <div className="bg-white rounded-lg shadow">
        <div className="p-6 border-b border-gray-200">
          <h2 className="text-lg font-semibold text-gray-900">Quick Statistics</h2>
        </div>
        <div className="p-6">
          <div className="grid grid-cols-1 md:grid-cols-4 gap-6">
            <div className="text-center">
              <div className="text-2xl font-bold text-rose-primary">156</div>
              <div className="text-sm text-gray-600">Total Reports Generated</div>
            </div>
            <div className="text-center">
              <div className="text-2xl font-bold text-blue-600">24</div>
              <div className="text-sm text-gray-600">This Month</div>
            </div>
            <div className="text-center">
              <div className="text-2xl font-bold text-green-600">89%</div>
              <div className="text-sm text-gray-600">Data Accuracy</div>
            </div>
            <div className="text-center">
              <div className="text-2xl font-bold text-purple-600">4.8</div>
              <div className="text-sm text-gray-600">Avg. Report Rating</div>
            </div>
          </div>
        </div>
      </div>
    </div>
  );
};

export default ReportsPage;